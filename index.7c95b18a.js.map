{"mappings":"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","sources":["node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/util.js","node_modules/ol/src/Object.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/Feature.js","node_modules/ol/src/has.js","node_modules/ol/src/transform.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/math.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/ol/src/geom/Circle.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/renderer/canvas/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/layer/Vector.js","main.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  !!(\n    ua.indexOf('version/15.4') >= 0 ||\n    ua.match(/cpu (os|iphone os) 15_4 like mac os x/)\n  );\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [opt_background] Background color.\n   */\n  setBackground(opt_background) {\n    this.background_ = opt_background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != SourceState.READY &&\n          sourceState != SourceState.UNDEFINED)\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/render/Event~RenderEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/render/Event~RenderEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [opt_disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(opt_disable) {\n  const hide = opt_disable === undefined ? true : opt_disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n      const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (opt_isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {PluggableMap} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Please the `layer.getData()` method for {@link module:ol/layer/Tile~TileLayer#getData tile layers} or\n   * {@link module:ol/layer/Image~ImageLayer#getData image layers} instead of using this method.\n   *\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: In maps with more than one layer, this method will typically return pixel data\n   * representing the composed image of all layers visible at the given pixel – because layers\n   * will generally share the same rendering context.  To force layers to render separately, and\n   * to get pixel data representing only one layer at a time, you can assign each layer a unique\n   * `className` in its constructor.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer~Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   * @deprecated\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        state.layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    /** @type {import(\"./renderer/Map.js\").default} */ (\n      this.renderer_\n    ).renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/geom/Circle\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `opt_layout` and no\n   *     `opt_radius` are also accepted.\n   * @param {number} [opt_radius] Radius.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(center, opt_radius, opt_layout) {\n    super();\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      const radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @api\n   */\n  clone() {\n    const circle = new Circle(\n      this.flatCoordinates.slice(),\n      undefined,\n      this.layout\n    );\n    circle.applyProperties(this);\n    return circle;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius,\n      flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius,\n      flatCoordinates[1] + radius,\n      extent\n    );\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.CIRCLE;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  getCoordinates() {\n    return null;\n  }\n\n  setCoordinates(coordinates, opt_layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      rotate(center, 0, center.length, stride, angle, anchor, center)\n    );\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(\n      translate(center, 0, center.length, stride, deltaX, deltaY, center)\n    );\n    this.changed();\n  }\n}\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './renderer/canvas/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n\n  if (!opt_interpolate) {\n    assign(context, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!opt_interpolate) {\n    assign(stitchContext, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !opt_interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/renderer/canvas/common\n */\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n\n/**\n * Context options to enable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_ENABLED = {\n  imageSmoothingEnabled: true,\n  msImageSmoothingEnabled: true,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {boolean} [opt_interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!opt_interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features =\n        /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n          options.features\n        );\n    } else if (options.features) {\n      collection =\n        /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */ (\n          options.features\n        );\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = function (feature) {\n          this.removeFeatureInternal(feature);\n        }.bind(this);\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    return [anchor[0] - displacement[0], anchor[1] + displacement[1]];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    return [size[0] / 2 - displacement[0], size[1] / 2 + displacement[1]];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import GeometryType from 'ol/geom/GeometryType';\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n *\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n *\n *  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n *    styles[GeometryType.LINE_STRING]\n *  );\n *\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n *\n *  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n *    GeometryType.POLYGON\n *  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../PluggableMap.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   * @param {string} [opt_backgroundColor] Background color.\n   */\n  useContainer(target, transform, opacity, opt_backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      target.style.opacity === '' &&\n      opacity === 1 &&\n      (!opt_backgroundColor ||\n        (target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(opt_backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      if (opt_backgroundColor) {\n        style.backgroundColor = opt_backgroundColor;\n      }\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    const x = Math.round(renderPixel[0]);\n    const y = Math.round(renderPixel[1]);\n    let pixelContext = this.pixelContext_;\n    if (!pixelContext) {\n      const pixelCanvas = document.createElement('canvas');\n      pixelCanvas.width = 1;\n      pixelCanvas.height = 1;\n      pixelContext = pixelCanvas.getContext('2d');\n      this.pixelContext_ = pixelContext;\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n    let data;\n    try {\n      pixelContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        this.pixelContext_ = null;\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {IMAGE_SMOOTHING_DISABLED, IMAGE_SMOOTHING_ENABLED} from './common.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (!(tile instanceof ImageTile || tile instanceof ReprojTile)) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      return this.getImageData(tile.getImage(), col, row);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(\n      target,\n      canvasTransform,\n      layerState.opacity,\n      this.getBackground(frameState)\n    );\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      assign(context, IMAGE_SMOOTHING_DISABLED);\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    assign(context, IMAGE_SMOOTHING_ENABLED);\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style/Style~Style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case GeometryType.MULTI_POLYGON:\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.POLYGON:\n      case GeometryType.MULTI_LINE_STRING:\n        builderEnds = [];\n        flatCoordinates =\n          type == GeometryType.POLYGON\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.LINE_STRING:\n      case GeometryType.CIRCLE:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case GeometryType.POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0] * this.imagePixelRatio_;\n    this.originY_ = origin[1] * this.imagePixelRatio_;\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = horizontalTextAlign(\n      textIsArray ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[14]\n            );\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(\n      target,\n      canvasTransform,\n      layerState.opacity,\n      this.getBackground(frameState)\n    );\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","import 'ol/ol.css';\nimport Feature from 'ol/Feature';\nimport Map from 'ol/Map';\nimport View from 'ol/View';\nimport {Circle} from 'ol/geom';\nimport {OSM, Vector as VectorSource} from 'ol/source';\nimport {Style} from 'ol/style';\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer';\nimport {fromLonLat} from 'ol/proj';\n\n// const locations = [, ,  [-121.884320, 37.331244], , [-121.884320, 37.331244]]\n\nconst circleFeature1 = new Feature({\n  geometry: new Circle(fromLonLat([-119.700322, 34.421638]), 11000),\n});\ncircleFeature1.setStyle(\n  new Style({\n    renderer(coordinates, state) {\n      const [[x, y], [x1, y1]] = coordinates;\n      const ctx = state.context;\n      const dx = x1 - x;\n      const dy = y1 - y;\n      const radius = Math.sqrt(dx * dx + dy * dy);\n\n      const innerRadius = 0;\n      const outerRadius = radius * 1.4;\n\n      const gradient = ctx.createRadialGradient(\n        x,\n        y,\n        innerRadius,\n        x,\n        y,\n        outerRadius\n      );\n      gradient.addColorStop(1, 'rgba(255,0,0,0.7)');\n      ctx.beginPath();\n      ctx.arc(x, y, radius, 0, 2 * Math.PI, true);\n      ctx.fillStyle = gradient;\n      ctx.fill();\n\n      ctx.arc(x, y, radius, 0, 2 * Math.PI, true);\n      ctx.strokeStyle = 'rgba(255,0,0,1)';\n      ctx.stroke();\n    },\n  })\n);\n\nconst circleFeature2 = new Feature({\n  geometry: new Circle(fromLonLat([-118.219538, 34.039059]), 16000),\n});\ncircleFeature2.setStyle(\n  new Style({\n    renderer(coordinates, state) {\n      const [[x, y], [x1, y1]] = coordinates;\n      const ctx = state.context;\n      const dx = x1 - x;\n      const dy = y1 - y;\n      const radius = Math.sqrt(dx * dx + dy * dy);\n\n      const innerRadius = 0;\n      const outerRadius = radius * 1.4;\n\n      const gradient = ctx.createRadialGradient(\n        x,\n        y,\n        innerRadius,\n        x,\n        y,\n        outerRadius\n      );\n      gradient.addColorStop(1, 'rgba(255,255,0,0.7)');\n      ctx.beginPath();\n      ctx.arc(x, y, radius, 0, 2 * Math.PI, true);\n      ctx.fillStyle = gradient;\n      ctx.fill();\n\n      ctx.arc(x, y, radius, 0, 2 * Math.PI, true);\n      ctx.strokeStyle = 'rgba(255,255,0,1)';\n      ctx.stroke();\n    },\n  })\n);\n\nconst circleFeature3 = new Feature({\n  geometry: new Circle(fromLonLat([-121.884320,37.331244]), 21000),\n});\ncircleFeature3.setStyle(\n  new Style({\n    renderer(coordinates, state) {\n      const [[x, y], [x1, y1]] = coordinates;\n      const ctx = state.context;\n      const dx = x1 - x;\n      const dy = y1 - y;\n      const radius = Math.sqrt(dx * dx + dy * dy);\n\n      const innerRadius = 0;\n      const outerRadius = radius * 1.4;\n\n      const gradient = ctx.createRadialGradient(\n        x,\n        y,\n        innerRadius,\n        x,\n        y,\n        outerRadius\n      );\n      gradient.addColorStop(1, 'rgba(100,0,255,0.7)');\n      ctx.beginPath();\n      ctx.arc(x, y, radius, 0, 2 * Math.PI, true);\n      ctx.fillStyle = gradient;\n      ctx.fill();\n\n      ctx.arc(x, y, radius, 0, 2 * Math.PI, true);\n      ctx.strokeStyle = 'rgba(100,0,255,1)';\n      ctx.stroke();\n    },\n  })\n);\n\n\nnew Map({\n  layers: [\n    new TileLayer({\n      source: new OSM(),\n      visible: true,\n    }),\n    new VectorLayer({\n      source: new VectorSource({\n        features: [circleFeature1, circleFeature2, circleFeature3],\n      }),\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: fromLonLat([-120.649918, 35.266712]),\n    zoom: 6,\n  }),\n});"],"names":["$aeedce20e9577100$export$2e2bcd8739ae039","BaseEvent","type","this","propagationStopped","defaultPrevented","target","prototype","preventDefault","stopPropagation","$e881b5dca21eb5d4$export$2e2bcd8739ae039","$3273ed08087da3da$export$2e2bcd8739ae039","Disposable","disposed","dispose","disposeInternal","$b998d41b678ed5d1$export$4e734a3b32fb971b","a","b","$b998d41b678ed5d1$export$8a3786cc03fdb777","arr","direction","n","length","i","$b998d41b678ed5d1$export$292cfa960964f0e0","begin","end","tmp","$b998d41b678ed5d1$export$8b58be045bf06082","data","extension","Array","isArray","$b998d41b678ed5d1$export$e9bab7fafb253603","arr1","arr2","len1","$013a1733c226ec50$export$22e23a2304399231","$013a1733c226ec50$export$8f11cee4bdc7e668","$013a1733c226ec50$export$1cd1943b3a73bbe8","$beaefe87199bb537$export$e6e34fd1f2686227","Object","assign","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","$beaefe87199bb537$export$42ffd38884aecdac","object","property","$beaefe87199bb537$export$a5c4301012ad6f07","values","push","$beaefe87199bb537$export$dd1bc94b04021eeb","$08c28d22c0cb5a39$export$2e2bcd8739ae039","_super","Target","opt_target","_this","call","eventTarget_","pendingRemovals_","dispatching_","listeners_","$08c28d22c0cb5a39$var$__extends","addEventListener","listener","listeners","listenersForType","indexOf","dispatchEvent","event","isString","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","$294047c5e65f31a3$export$2e2bcd8739ae039","$d5bf8abd656a3cdc$export$63174c828edd6ff8","opt_this","opt_once","bind","originalListener_1","apply","eventsKey","$d5bf8abd656a3cdc$export$8d2a95bc11b44725","$d5bf8abd656a3cdc$export$b0a21c8b3c1c921","$1f093ab5083c8a1f$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$1f093ab5083c8a1f$var$__extends","changed","getRevision","len","ol_key","$1f093ab5083c8a1f$export$b7ef3f8527533384","$08c28d22c0cb5a39$exports","default","$1f093ab5083c8a1f$export$2e2bcd8739ae039","$6c5e11070e371322$export$817eb92a8194bab0","Error","$6c5e11070e371322$var$uidCounter_","$6c5e11070e371322$export$5e82334337e0f204","obj","ol_uid","String","$b68b3d6e32e3074a$export$cf395d7c4a2d5a17","oldValue","$b68b3d6e32e3074a$var$__extends","$b68b3d6e32e3074a$export$2e2bcd8739ae039","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","hasProperties","notify","eventType","concat","addChangeListener","removeChangeListener","set","opt_silent","applyProperties","unset","$1f093ab5083c8a1f$exports","$40658b5e833b516b$export$2e2bcd8739ae039","AssertionError","code","message","split","name","$40658b5e833b516b$var$__extends","$35d5ec884318008e$export$a7a9523472993e97","assertion","errorCode","$40658b5e833b516b$exports","$9fd014ab6df63665$export$bb06ddfd5d66e02e","styles_1","getZIndex","$9fd014ab6df63665$export$2e2bcd8739ae039","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","$9fd014ab6df63665$var$__extends","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","opt_style","setId","id","$b68b3d6e32e3074a$exports","$e22e7611e69f42a9$var$transformStringDiv","$67c66761d21428d0$var$ua","navigator","userAgent","toLowerCase","$67c66761d21428d0$export$8442bdfd18b7b8a6","$67c66761d21428d0$export$39dfd62a25e0fe93","match","$67c66761d21428d0$export$76c0a3b101d93136","$67c66761d21428d0$export$6b83a0446fc26f94","devicePixelRatio","$67c66761d21428d0$export$98fcef3dc9973292","WorkerGlobalScope","OffscreenCanvas","self","$67c66761d21428d0$export$716f8695eedb9bad","Image","decode","$67c66761d21428d0$export$f751ce96c6c4e4fc","passive","options","defineProperty","window","error","$e22e7611e69f42a9$export$adaa4cf7ef1b65be","transform","c","d","e","f","$e22e7611e69f42a9$export$5635d7ef4b8fee1c","coordinate","x","y","$e22e7611e69f42a9$export$f672e0b6f7222cd7","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","$e22e7611e69f42a9$export$bd70ea2a93c0fa4","mat","det","$e22e7611e69f42a9$export$f84e8e69fd4488a5","transformString","join","node","document","createElement","$2f35615121725455$export$2e2bcd8739ae039","$dab4245bc22b806c$export$2e2bcd8739ae039","$6da4c8ed3074c92b$export$8aceca7c77505534","coordinates","extent","$6da4c8ed3074c92b$export$fe201bb3bbe031e9","$6da4c8ed3074c92b$export$1f820e3920fa5715","$6da4c8ed3074c92b$export$ab1029bcae9ddb4a","opt_extent","$6da4c8ed3074c92b$export$9cd59f9826255e47","slice","$6da4c8ed3074c92b$export$cbe64c389534206f","dx","dy","$6da4c8ed3074c92b$export$ac68c24d37ca240f","$6da4c8ed3074c92b$export$805bdfd6d6690e97","$6da4c8ed3074c92b$export$be866b1e0809b17e","extent1","extent2","$6da4c8ed3074c92b$export$f97905ead28c61a8","minX","minY","maxX","maxY","relationship","Infinity","$6da4c8ed3074c92b$export$958e3e1a02eac4b6","$6da4c8ed3074c92b$export$3e2152b047719fa1","$6da4c8ed3074c92b$export$e9bab7fafb253603","$6da4c8ed3074c92b$export$30570204156ffd18","flatCoordinates","offset","stride","$6da4c8ed3074c92b$export$f1dab130b92b85a9","min","max","$6da4c8ed3074c92b$export$f9ed8a3d123a08e2","callback","val","$6da4c8ed3074c92b$export$8d09f5e2e1bf560d","$6da4c8ed3074c92b$export$e77c1cf70445e168","$6da4c8ed3074c92b$export$b84fa077c8b05295","$6da4c8ed3074c92b$export$cb1538b07e6964ff","$6da4c8ed3074c92b$export$520c40045967cb15","area","$6da4c8ed3074c92b$export$dd1bc94b04021eeb","$6da4c8ed3074c92b$export$3c49c185de0c2bfc","$6da4c8ed3074c92b$export$c08559766941f856","$6da4c8ed3074c92b$export$c91255cadecfe081","$6da4c8ed3074c92b$export$a1cfd206661d0801","corner","$6da4c8ed3074c92b$export$13ba650faf8308","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$6da4c8ed3074c92b$export$72209efa88586d42","intersection","$6da4c8ed3074c92b$export$7b0a31e10bbff018","$6da4c8ed3074c92b$export$9f9dcb98c894b623","transformFn","opt_stops","width","height","xs","ys","l","$6da4c8ed3074c92b$var$_boundingExtentXYs","$6b000a049d919fe5$export$7d15b64cf5a3a4c4","$6b000a049d919fe5$export$2e2fd1ad24e4d350","cosh","exp","$6b000a049d919fe5$export$b9fae0bba9d9094d","log2","log","LOG2E","$6b000a049d919fe5$export$251bb0a9cef172e6","t","$6b000a049d919fe5$export$88e6ebb4fe54f538","$6b000a049d919fe5$export$56cb859c01fa134d","angleInRadians","PI","$6b000a049d919fe5$export$cba01ba138429a1d","angleInDegrees","$6b000a049d919fe5$export$ba467bec01d66def","r","$6b000a049d919fe5$export$3a89f8d6f6bf6c9f","$6b000a049d919fe5$export$a81f732198733497","decimals","factor","pow","round","$6b000a049d919fe5$export$a3fe094919f356fd","floor","$6b000a049d919fe5$export$803ce6b71a0a94b2","ceil","$322346e1ff7894ca$var$HEX_COLOR_RE_","$322346e1ff7894ca$var$NAMED_COLOR_RE_","$322346e1ff7894ca$export$590567be997858b6","color","$322346e1ff7894ca$export$f84e8e69fd4488a5","$322346e1ff7894ca$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$322346e1ff7894ca$export$3004f64547af360e","s","g","exec","hasAlpha","parseInt","substr","$322346e1ff7894ca$export$a3295358bff77e","map","Number","$322346e1ff7894ca$var$fromStringInternal_","$322346e1ff7894ca$export$75093a47a9fa838d","$f351daabfe6e2d22$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","src","crossOrigin","$f351daabfe6e2d22$var$getKey","setSize","maxCacheSize","$f351daabfe6e2d22$export$747ccdf771a87ab8","$f6d1853b3fcae320$export$2e2bcd8739ae039","$57c5f0299cb9b82f$export$2e2bcd8739ae039","BaseLayer","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$57c5f0299cb9b82f$var$__extends","getBackground","getClassName","getLayerState","opt_managed","state","layer","managed","getOpacity","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","getSourceState","setBackground","opt_background","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$f5e92a4d985a2824$export$2e2bcd8739ae039","$98f5bfe3c4864f05$export$2e2bcd8739ae039","$534f30fce11effcd$export$acb1e9cb9ce4ca56","layerState","viewState","zoom","$534f30fce11effcd$export$2e2bcd8739ae039","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","rendered","render","setMap","handleSourcePropertyChange_","setSource","$534f30fce11effcd$var$__extends","array","states","getSource","getRenderSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","getMapInternal","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$57c5f0299cb9b82f$exports","$1bd0a226f9a16141$export$e9bab7fafb253603","coordinate1","coordinate2","$1bd0a226f9a16141$export$bb628a54ab399bc9","cosAngle","sinAngle","$1bd0a226f9a16141$export$39a9ce3624977b84","projection","canWrapX","worldWidth","worldsAway","$1bd0a226f9a16141$export$24e2b27d1ff0c1d5","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","$b370ab32454a96fd$var$expireIconCache","$b370ab32454a96fd$export$2e2bcd8739ae039","MapRenderer","map_","$b370ab32454a96fd$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","i1","j","layer1","$534f30fce11effcd$exports","inView","getWrapX","callback_1","order","forEach","m","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$b80dddceb0c42ad4$export$2e2bcd8739ae039","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$b80dddceb0c42ad4$var$__extends","$ce07df6d5d4656f1$var$fontRegEx","RegExp","$ce07df6d5d4656f1$var$fontRegExMatchIndex","$ce07df6d5d4656f1$export$5abde8a6aec4a131","fontSpec","lineHeight","weight","variant","families","family","$ce07df6d5d4656f1$export$52ec625a6a53b6a6","$075f937d7366f1a2$export$9e05d10eae75c464","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","getContext","$075f937d7366f1a2$export$5542201de9311ab2","newNode","oldNode","parent","parentNode","replaceChild","$075f937d7366f1a2$export$1d0aa160432dfea5","$d4aabc5c971073f1$export$e21b4112fdc612fc","$d4aabc5c971073f1$export$40a9eeef55665a40","$d4aabc5c971073f1$export$1d36981fcadac93b","console","warn","$d4aabc5c971073f1$var$measureFont","measureElement","$d4aabc5c971073f1$var$measureContext","$d4aabc5c971073f1$export$7fdcec604f0b1fa7","$d4aabc5c971073f1$export$a534074a28fa87ff","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d4aabc5c971073f1$export$4ea92329b673abd1","check","done","fonts","font","clearInterval","setInterval","$d4aabc5c971073f1$export$4feaf6852ff92513","metrics","$d4aabc5c971073f1$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","offsetHeight","measureText","$d4aabc5c971073f1$export$915c7ba51467308f","$d4aabc5c971073f1$export$3cb6f3a6e49cc0ee","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","translate","label","$d4aabc5c971073f1$var$executeLabelInstructions","drawImage","restore","$fa78c97693b12120$export$2e2bcd8739ae039","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$ce07df6d5d4656f1$export$1afde3d6e16a7b29","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$fa78c97693b12120$var$__extends","event_1","$b80dddceb0c42ad4$exports","declutterLayers","previousElement","layerIndex","sourceState","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$075f937d7366f1a2$export$caeacfe04f52533a","getDataAtPixel","$b370ab32454a96fd$exports","$161dd067fe2d672c$export$2e2bcd8739ae039","$931ffc4e747c14db$var$Property","$931ffc4e747c14db$export$a87ae6eb2761ec6d","opt_element","opt_index","$931ffc4e747c14db$var$__extends","$931ffc4e747c14db$export$2e2bcd8739ae039","Collection","opt_options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$0b703156bb914e6f$export$2f5ff21d758d25a7","$0b703156bb914e6f$var$__extends","$0b703156bb914e6f$var$Property","$0b703156bb914e6f$export$2e2bcd8739ae039","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$931ffc4e747c14db$exports","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","$3a171922c3a0c5ed$export$2e2bcd8739ae039","MapEvent","$3a171922c3a0c5ed$var$__extends","$a1b91f073c6a6c43$export$2e2bcd8739ae039","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$a1b91f073c6a6c43$var$__extends","getEventPixel","getCoordinateFromPixel","$3a171922c3a0c5ed$exports","$150f412a4a7fa263$export$2e2bcd8739ae039","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$d564567e31203d44$export$2e2bcd8739ae039","$6085d006f9d0efe2$export$2e2bcd8739ae039","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$6085d006f9d0efe2$var$__extends","emulateClick_","pointerEvent","newEvent1","$a1b91f073c6a6c43$exports","clearTimeout","setTimeout","newEvent","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","abs","clientX","clientY","$e4ad75f913b6f7ff$export$2e2bcd8739ae039","$07fa325567004bb7$export$2e2bcd8739ae039","$716c6804ea170b71$export$2e2bcd8739ae039","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$b8291d9739c3c64e$export$2e2bcd8739ae039","$4c51fd53052a6bbc$export$2e2bcd8739ae039","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$4c51fd53052a6bbc$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$4c51fd53052a6bbc$export$f08ad5eceeff5d45","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$419865bd7211e6e7$export$2e2bcd8739ae039","$03edbd434a9e6608$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$03edbd434a9e6608$export$1482081eec883108","$03edbd434a9e6608$export$2e2bcd8739ae039","$7d362782b4ccb93d$export$2e2bcd8739ae039","$d35baefbe89be4c5$export$2e2bcd8739ae039","CENTER","RESOLUTION","ROTATION","$6dc418afeec7068a$export$2e2bcd8739ae039","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$84ad988f04807ab1$export$f3928063e5e96d35","$84ad988f04807ab1$export$21e6da8a7375dfe8","$84ad988f04807ab1$export$ae9d6ed80df710e5","$84ad988f04807ab1$export$d26945d1ad52feeb","tan","$84ad988f04807ab1$var$EPSG3857Projection","EPSG3857Projection","point","$84ad988f04807ab1$var$__extends","$84ad988f04807ab1$export$b508d7ad9a891c1b","$84ad988f04807ab1$export$1ff8bb36c0983070","input","opt_output","opt_dimension","dimension","$84ad988f04807ab1$export$8c71322ec28ed6b4","atan","$b58ae362632b32c5$export$21e6da8a7375dfe8","$b58ae362632b32c5$export$1482081eec883108","$b58ae362632b32c5$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$b58ae362632b32c5$var$__extends","$b58ae362632b32c5$export$b508d7ad9a891c1b","$f5ec5c943d804ecb$var$cache","$11b5dd198626e1de$var$transforms","$11b5dd198626e1de$export$e16d8520af44a096","destination","sourceCode","destinationCode","$fb75384508533d8f$export$79376507b09a66f","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","$fb75384508533d8f$export$cc800923e997bb8","distance","bearing","lon1","dByR","lat","asin","$9c4744460e43e41b$var$showCoordinateWarning","$9c4744460e43e41b$export$ed949affbc7c4223","opt_disable","$9c4744460e43e41b$export$dd516654c5f598fb","$9c4744460e43e41b$export$83e8ab53904f8022","$9c4744460e43e41b$export$59ae956cd3e343f7","$f5ec5c943d804ecb$export$e16d8520af44a096","$9c4744460e43e41b$export$3988ae62b71be9a3","projectionLike","replace","$9c4744460e43e41b$export$2d8f7b4eec383d44","opt_units","pointResolution","getter","toEPSG4326_1","$9c4744460e43e41b$export$e3c4995a701c26a3","vertices","$9c4744460e43e41b$export$eeb8392580a05a37","projections","$9c4744460e43e41b$export$638ad73f7aafb913","$9c4744460e43e41b$export$549167224996a0fb","defaultCode","$9c4744460e43e41b$export$b15d9668511529b9","opt_projection","$9c4744460e43e41b$export$51186ad6e864892a","$9c4744460e43e41b$export$fe091d73a555748b","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$11b5dd198626e1de$export$3988ae62b71be9a3","$9c4744460e43e41b$export$fce0c6cfca85ed96","$9c4744460e43e41b$export$751c68e0e0efff79","projections2","forwardTransform","inverseTransform","$9c4744460e43e41b$var$userProjection","$9c4744460e43e41b$export$3973b77d5f6f2790","$9c4744460e43e41b$export$698f563af1ba02a5","$9c4744460e43e41b$export$d4b8ec0b96db1ee2","destProjection","$9c4744460e43e41b$export$96bfd09e2cffb006","$9c4744460e43e41b$export$494be3a3a25689ca","$9c4744460e43e41b$export$b56bb8ad8b3a00e9","sourceUnits","userUnits","$b21a6e049949bb31$export$c2f0af2c946f6897","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$b21a6e049949bb31$export$f883a24d5edde77c","$bac43a1f4a628548$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$bac43a1f4a628548$var$getSmoothClampedResolution","$bac43a1f4a628548$export$1c4e6da9b4b066fe","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$d65f0a322291d127$export$e20fbacbb41798b","$d65f0a322291d127$export$f883a24d5edde77c","$c7ccf7e681a9b333$export$929e5a82286172a6","$c7ccf7e681a9b333$export$57636bb43b1ccbb0","$c7ccf7e681a9b333$export$9b47139b511b56e4","$c7ccf7e681a9b333$export$45db2fc2f15997e7","$84ad988f04807ab1$exports","PROJECTIONS","$b58ae362632b32c5$exports","fromEPSG4326","toEPSG4326","$42282ac5c8474df1$export$2e2bcd8739ae039","$14c6e714516e527b$export$b92b2dedcfff79de","opt_dest","dest","$14c6e714516e527b$export$bb628a54ab399bc9","anchor","anchorX","anchorY","k","$14c6e714516e527b$export$d73ee8ef04f5226a","$50db89a00eb954f6$var$tmpTransform","$50db89a00eb954f6$export$2e2bcd8739ae039","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","applyTransform","nextArgs","$50db89a00eb954f6$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","$6da4c8ed3074c92b$export$6a4fe494c558c238","rotate","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$c76e993e57efc8c4$export$6af0c1b4a8549a43","layout","$c76e993e57efc8c4$export$a3767472617c7861","simpleGeometry","getFlatCoordinates","getStride","$c76e993e57efc8c4$export$2e2bcd8739ae039","SimpleGeometry","$c76e993e57efc8c4$var$__extends","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$c76e993e57efc8c4$var$getLayoutForStride","$14c6e714516e527b$export$dcdf75081b88279d","$50db89a00eb954f6$exports","$bf5604c1b8258b71$var$assignClosest","offset1","offset2","$bf5604c1b8258b71$export$bc2eb611ddf80103","squaredDelta","$bf5604c1b8258b71$export$fbf31c8f2668ed5a","ends","$bf5604c1b8258b71$export$4adc8e5135fb44c","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$bf5604c1b8258b71$export$5a48a0eefcf14992","$6b086aa46281540d$export$60815ead40ec79ab","$6b086aa46281540d$export$5c4daf67e03c190f","$6b086aa46281540d$export$47c3746a74384d45","coordinatess","opt_ends","jj","$8780aae6970f5f65$export$ef693d1572e64fb8","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","$8780aae6970f5f65$export$51a0620f7a28532b","$8780aae6970f5f65$export$b84e8d2c4920a0c6","$8780aae6970f5f65$export$60a9904b67f8d51b","simplifiedEnds","$5454470599558ddd$export$9c0934e4e9c3f61e","opt_coordinates","$5454470599558ddd$export$cbb9596fc0f40db2","opt_coordinatess","$5454470599558ddd$export$915c7058aeb4dfeb","endss","opt_coordinatesss","coordinatesss","$01ff26a2f986a1d0$export$3c5e1905f889266e","twiceArea","$01ff26a2f986a1d0$export$7a8ee541dfdf2ed5","$548636579b4087f2$export$2e2bcd8739ae039","LinearRing","maxDelta_","maxDeltaRevision_","$548636579b4087f2$var$__extends","getArea","$c76e993e57efc8c4$exports","$6eced4c969949f6b$export$2e2bcd8739ae039","Point","$6eced4c969949f6b$var$__extends","$239aa88e7a573859$export$cedabedc7ac0e138","$239aa88e7a573859$export$949a7a3a4b6f34fa","wn","$239aa88e7a573859$export$ae868c0f6acc3355","$2166f19777f69377$export$50e3b25928a5e892","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","$acee589e5b390c5c$export$40d8d71841a3d779","coordinatesExtent","ret","$3e64078bffae1cbd$export$4b80e395e36b5a56","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","$6da4c8ed3074c92b$export$a6a5a7a461419425","$acee589e5b390c5c$export$76dcd8f8f83b6ddb","$acee589e5b390c5c$export$830a0dafbb2ef1c5","$155dc783a4ec227e$export$741858880c96b18c","$7892dc06ffd23218$export$318f2842ed17e094","edge","$7892dc06ffd23218$export$f27cd06e85f4ba28","opt_right","right","isClockwise","$7892dc06ffd23218$export$b71b604ddfc778c7","$40aa8d43bbe572bf$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$40aa8d43bbe572bf$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$6eced4c969949f6b$exports","getLinearRingCount","getLinearRing","$548636579b4087f2$exports","getLinearRings","linearRings","$40aa8d43bbe572bf$export$2e2bcd8739ae039","$40aa8d43bbe572bf$export$f99d756c6d81ae3f","opt_n","opt_sphereRadius","$40aa8d43bbe572bf$export$c16b671815801c75","$40aa8d43bbe572bf$export$2451009d645fb8c2","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$40aa8d43bbe572bf$export$87d6a1539a56e47f","getRadius","startAngle","$70364d0195659942$var$animationCallback","returnValue","$70364d0195659942$export$964345001ee9ac52","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$70364d0195659942$export$c68d65f9148da196","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","resolutions","constrainResolution","capped","z","$bac43a1f4a628548$export$d65a517690fc4385","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","$bac43a1f4a628548$export$22ac0f6b219de91a","constraint","$70364d0195659942$export$4eeaa08dd550e3c0","theta","opt_tolerance","enableRotation","constrainRotation","$70364d0195659942$export$ee75376562060184","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$70364d0195659942$var$calculateCenterOn","rotX","rotY","$70364d0195659942$export$2e2bcd8739ae039","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$70364d0195659942$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","$40aa8d43bbe572bf$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","$cc435a5409103773$export$622c471beb1693c7","$cc435a5409103773$export$a71a825ff42fb8e1","$cceb59c4bc2a46b0$var$removeLayerMapProperty","$0b703156bb914e6f$exports","$cceb59c4bc2a46b0$var$setLayerMapProperty","$cceb59c4bc2a46b0$export$2e2bcd8739ae039","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","view","$70364d0195659942$exports","$cceb59c4bc2a46b0$var$createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","$4c51fd53052a6bbc$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","toString","control","interaction","$cceb59c4bc2a46b0$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$6085d006f9d0efe2$exports","defaultView","updateSize","handleViewPropertyChanged_","updateViewportSize_","GroupEvent","handleLayerRemove_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","offsetWidth","parseFloat","getClientRects","$b978dafe8f7d27ff$export$2e2bcd8739ae039","Control","target_","$b978dafe8f7d27ff$var$__extends","mapEvent","$6a26ab11104d2c24$export$2e2bcd8739ae039","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$6a26ab11104d2c24$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","$075f937d7366f1a2$export$1e1c9bf5a4ffe0d1","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$b978dafe8f7d27ff$exports","$a305cff1f91b3b86$export$2e2bcd8739ae039","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$a305cff1f91b3b86$var$__extends","resetNorth_","$4901e3e27e30416a$export$2e2bcd8739ae039","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$4901e3e27e30416a$var$__extends","zoomByDelta_","currentZoom","newZoom","$2c9e42723ccf2bfb$export$2e2bcd8739ae039","$39210df8527e63e5$export$4c486572e961a974","$39210df8527e63e5$export$ace321ff2a8016ef","$39210df8527e63e5$export$2e2bcd8739ae039","Interaction","setActive","$39210df8527e63e5$var$__extends","active","$b50403621294a654$export$2e2bcd8739ae039","DoubleClickZoom","delta_","$b50403621294a654$var$__extends","stopEvent","shiftKey","$39210df8527e63e5$exports","zoomByDelta","$cf1eb502962d87a8$export$e2a20c553f6c85ce","$cf1eb502962d87a8$export$2e2bcd8739ae039","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$cf1eb502962d87a8$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$cf1eb502962d87a8$var$isPointerDraggingEvent","$edf87b50170125f7$export$84bf76cd7afc7469","conditions","pass","$edf87b50170125f7$export$4e5f01653f9f1f82","altKey","metaKey","ctrlKey","$edf87b50170125f7$export$ae2cdf064e3b0c55","hasAttribute","activeElement","$edf87b50170125f7$export$d7ddd398f22d79ef","$edf87b50170125f7$export$ba9e5d519bc326ca","$edf87b50170125f7$export$1238ad6b5e7fff70","$edf87b50170125f7$export$fdc892d0d8fe3bfb","$edf87b50170125f7$export$5d31fe68a477cfbb","$edf87b50170125f7$export$e5570ca80cd8fd54","tagName","$edf87b50170125f7$export$abb7acbfa76bf3c4","pointerType","$edf87b50170125f7$export$189f0d593022b199","isPrimary","$c11585da26a016db$var$DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$c11585da26a016db$var$__extends","centroid","$cf1eb502962d87a8$exports","update","$1bd0a226f9a16141$export$dcdf75081b88279d","getDistance","getAngle","centerpx","$c11585da26a016db$export$2e2bcd8739ae039","$197c7092261b2aa0$export$2e2bcd8739ae039","DragRotate","lastAngle_","$197c7092261b2aa0$var$__extends","$c47adf75308683a6$export$2e2bcd8739ae039","RenderBox","geometry_","startPixel_","endPixel_","$c47adf75308683a6$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","$e05f414bc3918235$var$DragBoxEventType","$e05f414bc3918235$export$7053c33c051365ea","$e05f414bc3918235$var$__extends","$e05f414bc3918235$export$2e2bcd8739ae039","DragBox","box_","$c47adf75308683a6$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$afc7f51010a5b660$export$2e2bcd8739ae039","DragZoom","out_","out","$afc7f51010a5b660$var$__extends","$e05f414bc3918235$exports","$82662515908d12f9$export$2e2bcd8739ae039","$178bb1517d626802$export$2e2bcd8739ae039","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$178bb1517d626802$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$2237fabfa170eefc$export$2e2bcd8739ae039","KeyboardZoom","$2237fabfa170eefc$var$__extends","charCode","charCodeAt","$9a54ea8d5f7a49ee$export$2e2bcd8739ae039","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$aaa378764710d71e$export$9484bbecc3c49a2e","TRACKPAD","WHEEL","$aaa378764710d71e$export$2e2bcd8739ae039","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$aaa378764710d71e$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$9727451f2459496c$export$2e2bcd8739ae039","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$9727451f2459496c$var$__extends","rotationDelta","touch0","touch1","$79c946b60b88d4a6$export$2e2bcd8739ae039","PinchZoom","lastDistance_","lastScaleDelta_","$79c946b60b88d4a6$var$__extends","scaleDelta","$41aa29ae0c4b607a$export$2e2bcd8739ae039","Map","$4901e3e27e30416a$exports","zoomOptions","$a305cff1f91b3b86$exports","rotateOptions","attribution","$6a26ab11104d2c24$exports","attributionOptions","$b4471d80e1d69273$export$ebe90cb607ad99e","altShiftDragRotate","$197c7092261b2aa0$exports","doubleClickZoom","$b50403621294a654$exports","zoomDelta","zoomDuration","dragPan","$c11585da26a016db$exports","pinchRotate","$9727451f2459496c$exports","pinchZoom","$79c946b60b88d4a6$exports","keyboard","$178bb1517d626802$exports","$2237fabfa170eefc$exports","mouseWheelZoom","$aaa378764710d71e$exports","shiftDragZoom","$afc7f51010a5b660$exports","$fdc8b40501c0cf45$export$ebe90cb607ad99e","$41aa29ae0c4b607a$var$__extends","$fa78c97693b12120$exports","$cceb59c4bc2a46b0$exports","$f6170f1a08d72585$var$Circle","Circle","setCenterAndRadius","$f6170f1a08d72585$var$__extends","getRadiusSquared_","setRadius","$f6170f1a08d72585$export$2e2bcd8739ae039","$859b1614288c6316$export$2e2bcd8739ae039","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","expireCache","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$0f235d2d04095c6e$export$2e2bcd8739ae039","Tile","tileCoord","interimTile","transition_","transition","transitionStarts_","interpolate","$0f235d2d04095c6e$var$__extends","release","getInterimTile","refreshInterimChain","getTileCoord","setState","getAlpha","inTransition","endTransition","$5edd00bd92be9cf8$export$2e2bcd8739ae039","ImageBase","$5edd00bd92be9cf8$var$__extends","getImage","getPixelRatio","$7eb75c96a6b6f2c6$export$2e2bcd8739ae039","$b54439be79d4619a$export$bc96ecc7c2a50764","image","loadHandler","errorHandler","img","listening","decoding","loaded","catch","ImageWrapper","imageLoadFunction","src_","image_","unlisten_","imageLoadFunction_","$b54439be79d4619a$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$5edd00bd92be9cf8$exports","$cd3bc8d185522361$export$2e2bcd8739ae039","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","$cd3bc8d185522361$var$__extends","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","$b54439be79d4619a$exports","listenImage","$0f235d2d04095c6e$exports","$2b0a118af78fb031$var$brokenDiagonalRendering_","$6be53f6edfbf1854$export$2e2bcd8739ae039","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$fa21ebc07613627d$export$ab6c91696bd3263e","imageSmoothingEnabled","msImageSmoothingEnabled","$fa21ebc07613627d$export$75f39f0ce198f93f","$2b0a118af78fb031$var$drawTestTriangle","u1","v1","u2","v2","beginPath","moveTo","lineTo","closePath","clip","$2b0a118af78fb031$var$verifyBrokenDiagonalRendering","$2b0a118af78fb031$export$5fbb958059b7e71f","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$2b0a118af78fb031$export$b3890eb0ae9dca99","triangulation","sources","gutter","opt_renderEdges","opt_interpolate","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$6b000a049d919fe5$export$8240f01c446270e6","getImageData","$2b0a118af78fb031$var$isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","lineWidth","stroke","$398e350e33050c07$export$2e2bcd8739ae039","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$2b0a118af78fb031$export$16d356211d01f1cc","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","$398e350e33050c07$var$__extends","reproject_","getTileSize","leftToLoad_1","state1","sourceListenKey_1","unlistenSources_","$bf2a04496fadabc6$export$958e3e1a02eac4b6","opt_tileCoord","$bf2a04496fadabc6$export$92d0df0f1d25c63c","$bf2a04496fadabc6$export$a47fb462a08de82f","$a12e09565a34db59$export$2e2bcd8739ae039","TileCache","$a12e09565a34db59$var$__extends","pruneExceptNewestZ","$bf2a04496fadabc6$export$a807b7874eb66454","$7e3d7a0f8b272861$export$2e2bcd8739ae039","$ed6dc99f268f3882$var$adaptAttributions","attributionLike","$ed6dc99f268f3882$export$2e2bcd8739ae039","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","interpolate_","viewResolver","viewRejector","viewPromise_","reject","$ed6dc99f268f3882$var$__extends","getInterpolate","refresh","setAttributions","$550e524b0d1b61d4$var$TileRange","TileRange","containsTileRange","tileRange","equals","getHeight","getWidth","intersects","$550e524b0d1b61d4$export$958e3e1a02eac4b6","$550e524b0d1b61d4$export$2e2bcd8739ae039","$bb602a307ef98bb5$var$tmpTileCoord","$bb602a307ef98bb5$export$2e2bcd8739ae039","TileGrid","opt_strict","compare","every","currentVal","res","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","opt_tileRange","tileCoordExtent","getOrigin","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordCenter","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","fullTileRanges","$5779655d81caea04$export$1f4812384df8a9c5","opt_maxZoom","opt_tileSize","opt_corner","$5779655d81caea04$var$resolutionsFromExtent","$5779655d81caea04$export$ce88871416242df8","$5779655d81caea04$export$7b5b6ef8fd55fac4","$5779655d81caea04$export$a251b12f5601c16f","opt_maxResolution","half","$988a11d09320f6a8$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tilePixelRatio","tileCache","$a12e09565a34db59$exports","tmpSize","tileOptions","zDirection","$988a11d09320f6a8$var$__extends","getTileCacheForProjection","forEachLoadedTile","tileCoordKey","covered","getGutterForProjection","setKey","getOpaque","getTile","getTileGrid","getTileGridForProjection","getTilePixelRatio","getTilePixelSize","getTileCoordForTileUrlFunction","$5779655d81caea04$export$39a9ce3624977b84","$bf2a04496fadabc6$export$60bedf8e3e3c3dbe","updateCacheSize","tileCount","useTile","$ed6dc99f268f3882$exports","$988a11d09320f6a8$export$c571855c51e6c4b6","$988a11d09320f6a8$export$2e2bcd8739ae039","$91dd08a0f5859882$export$f0ecb46e90798741","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$91dd08a0f5859882$export$436f44dbcc31fea3","templates","tileUrlFunctions","$bf2a04496fadabc6$export$d6af199866bfb566","$91dd08a0f5859882$export$4229b1d9af69b3be","$e6408236331c2614$export$2e2bcd8739ae039","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","$e6408236331c2614$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","uid","tileState","$988a11d09320f6a8$exports","TileSourceEvent","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","fromCharCode","stop_1","$91dd08a0f5859882$export$2a1fa079bfd73dde","$51d055913ca55b5e$var$TileImage","TileImage","imageSmoothing","$51d055913ca55b5e$var$defaultTileLoadFunction","tileClass","$cd3bc8d185522361$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","$51d055913ca55b5e$var$__extends","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","z1","pixelRatio1","newTile","$398e350e33050c07$exports","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$e6408236331c2614$exports","imageTile","$51d055913ca55b5e$export$2e2bcd8739ae039","$963a7ef65488964c$export$2e2bcd8739ae039","XYZ","xyzOptions","gridOptions","$5779655d81caea04$export$38500bbeccc864ff","$963a7ef65488964c$var$__extends","$51d055913ca55b5e$exports","$6c8498cc816f2362$export$4de8a5e77eb994ad","$6c8498cc816f2362$export$2e2bcd8739ae039","OSM","$6c8498cc816f2362$var$__extends","$963a7ef65488964c$exports","$176ca75ee9f69668$exports","t1","t2","r2","e2","a2","h2","o","u","p","n1","r1","_maxEntries","_minEntries","e1","a1","h1","p1","o1","leaf","s1","l1","f1","m1","d1","all","_all","search","toBBox","collides","insert","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","$34c742891733e7a4$export$2e2bcd8739ae039","RBush","opt_maxEntries","rbush_","$parcel$interopDefault","items_","extents","items","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","$ccc4e6f11f11978f$export$2e2bcd8739ae039","$eb51d0a16123ee90$export$84bf76cd7afc7469","$fdcc6dd70a9488b9$export$2e2bcd8739ae039","$588823c001569193$var$withCredentials","$588823c001569193$export$14cc81df70b6707e","format","success","failure","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","$588823c001569193$export$441d7b57adab24d0","dataProjection","addFeatures","$84888e4daf3fdf44$export$d402fd02dc2b661c","opt_feature","opt_features","$84888e4daf3fdf44$var$__extends","$84888e4daf3fdf44$export$2e2bcd8739ae039","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","featureChangeKeys","removed","setLoader","$61c65c2463af340d$export$2e2bcd8739ae039","$546509bca2d85ec0$export$2e2bcd8739ae039","$e60011aea38e6239$export$2e2bcd8739ae039","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getHitDetectionImage","getImageState","getImageSize","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$0e5ad1d3b638689e$var$taintedTestContext","$0e5ad1d3b638689e$var$IconImage","IconImage","imageState","hitDetectionImage_","color_","imageState_","size_","tainted_","$0e5ad1d3b638689e$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","$0e5ad1d3b638689e$export$3988ae62b71be9a3","$8463d325b53eeb0c$export$2e2bcd8739ae039","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize_","imgSize","iconImage_","$0e5ad1d3b638689e$exports","offset_","offsetOrigin_","offsetOrigin","$8463d325b53eeb0c$var$__extends","setAnchor","getColor","iconImageSize","$e0807f400ec9a0a9$export$dc5b1400ac3a10a8","$3e99c452138b2224$export$2e2bcd8739ae039","RegularShape","hitDetectionCanvas_","fill_","fill","points","radius_","radius1","radius2_","radius2","stroke_","renderOptions_","$3e99c452138b2224$var$__extends","getFill","getPoints","getRadius2","getStroke","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","lineDash","lineDashOffset","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","setLineDash","drawHitDetectionCanvas_","arc","angle0","radiusC","$06150d8570b7481b$export$2e2bcd8739ae039","CircleStyle","$06150d8570b7481b$var$__extends","$3e99c452138b2224$exports","$d61d1dcaf3c44610$export$2e2bcd8739ae039","Fill","setColor","$f9d0329c5c745263$export$2e2bcd8739ae039","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$8c7f6dda98e8cb9c$var$Style","Style","geometryFunction_","$8c7f6dda98e8cb9c$var$defaultGeometryFunction","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setFill","setStroke","setText","$8c7f6dda98e8cb9c$var$defaultStyles","$8c7f6dda98e8cb9c$export$6865c5ac2f5ce8b6","$06150d8570b7481b$exports","$8c7f6dda98e8cb9c$export$2e2bcd8739ae039","$e4c61536de922b84$export$2e2bcd8739ae039","$93be2de6a052f587$export$2e2bcd8739ae039","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$93be2de6a052f587$var$__extends","getPreload","getUseInterimTilesOnError","$cb18cdefd702a327$export$2e2bcd8739ae039","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$cb18cdefd702a327$var$__extends","loadedTileCallback","tiles","createLoadedTileFinder","getLayer","renderIfReadyAndVisible","loadImage","$42152f52b26b6ca7$var$pixelContext","$42152f52b26b6ca7$export$2e2bcd8739ae039","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","$42152f52b26b6ca7$var$__extends","col","row","clearRect","err","useContainer","opt_backgroundColor","layerClassName","backgroundColor","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","pixelContext","pixelCanvas","Uint8Array","$cb18cdefd702a327$exports","$02fffef185f4339b$export$2e2bcd8739ae039","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$02fffef185f4339b$var$__extends","isDrawableTile","tileOrigin","viewResolution","viewCenter","tileSource","sourceRevision","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","childTileRange","canvasScale","canvasTransform","clips","clipZs","currentClip","zs","reverse","currentZ","currentTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","tilesToDraw","xIndex","nextX","yIndex","nextY","contextSaved","i_1","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","frameState1","tileSource1","postRenderFunction","opt_tileCallback","$42152f52b26b6ca7$exports","$32e67a4d3559554a$export$2e2bcd8739ae039","TileLayer","$32e67a4d3559554a$var$__extends","$02fffef185f4339b$exports","$93be2de6a052f587$exports","$c8d6dc4c09ed9916$var$Property","$c8d6dc4c09ed9916$export$2e2bcd8739ae039","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$c8d6dc4c09ed9916$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","$8c7f6dda98e8cb9c$export$c314ea3f6b164147","$cf547866e052f25b$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$cf547866e052f25b$export$f21891651e408226","$cf547866e052f25b$export$7a98aa5364d62ba8","$cf547866e052f25b$export$9f746cc58a899a00","$cf547866e052f25b$export$89b10f327e413e71","$cf547866e052f25b$export$2e2bcd8739ae039","$eb0e5c3938110b4c$export$2e2bcd8739ae039","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$2bb20f8873deb436$export$2e2bcd8739ae039","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$2bb20f8873deb436$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$b652f9dd73b29cfe$export$2e2bcd8739ae039","CanvasImageBuilder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$b652f9dd73b29cfe$var$__extends","myBegin","opt_sharedData","hitDetectionImage","$2bb20f8873deb436$exports","$a207f23baa5aa2c5$export$2e2bcd8739ae039","CanvasLineStringBuilder","$a207f23baa5aa2c5$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$7d2e8ba11a45ae8a$export$2e2bcd8739ae039","CanvasPolygonBuilder","$7d2e8ba11a45ae8a$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$27569314e3df91c2$export$2e2bcd8739ae039","$79529ab61b92f869$export$ed6c897eea07a254","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$8243e906fae47bbe$export$91a016276e4aee96","middle","hanging","alphabetic","ideographic","bottom","$8243e906fae47bbe$export$2e2bcd8739ae039","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$8243e906fae47bbe$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","getFlatMidpoint","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg_1","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$e22658f4b743550b$var$BATCH_CONSTRUCTORS","$7d2e8ba11a45ae8a$exports","Default","$b652f9dd73b29cfe$exports","LineString","$a207f23baa5aa2c5$exports","Text","$8243e906fae47bbe$exports","$e22658f4b743550b$export$2e2bcd8739ae039","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$e74ccf0666398498$export$2e2bcd8739ae039","$f6421f31729929e6$export$153a9a17ab3e949f","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","chars","substring","$bf04349d827c1d16$export$153f8c6b4d8caebc","$6526fa4ee42dc39d$var$tmpExtent","$6526fa4ee42dc39d$var$p1","$6526fa4ee42dc39d$var$p2","$6526fa4ee42dc39d$var$p3","$6526fa4ee42dc39d$var$p4","$6526fa4ee42dc39d$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$6526fa4ee42dc39d$var$rtlRegEx","$6526fa4ee42dc39d$var$horizontalTextAlign","align","test","TEXT_ALIGN","$6526fa4ee42dc39d$var$createTextChunks","acc","line","$6526fa4ee42dc39d$export$2e2bcd8739ae039","Executor","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","chunks","reduce","_a","baseStyle","widths","heights","lineWidths","currentWidth","currentHeight","$d4aabc5c971073f1$export$7d7c13020df1e791","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","previousFont","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","text_1","fillStrokeArgs","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","ii_1","execute","executeHitDetection","$a34a824d875e4ea1$var$ORDER","$a34a824d875e4ea1$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","hitExtent","indexes","$a34a824d875e4ea1$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$a34a824d875e4ea1$export$96fc84ea21b8269f","featureCallback","imageData","idx","result_1","executor","opt_builderTypes","builderTypes","$a34a824d875e4ea1$export$2e2bcd8739ae039","$7b0c2128a27f5020$export$2e2bcd8739ae039","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$7b0c2128a27f5020$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$4b9ac454600c05d2$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","circleReplay","$4b9ac454600c05d2$export$531ddd8416d52dfc","feature1","feature2","$4b9ac454600c05d2$export$bdacc5b475012edb","$4b9ac454600c05d2$export$36f470a33a42f413","$4b9ac454600c05d2$var$renderGeometry","$4b9ac454600c05d2$var$renderFeatureInternal","getGeometries","$659e0e97392a5f5e$export$2e2bcd8739ae039","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$659e0e97392a5f5e$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$e22e7611e69f42a9$export$3e4e33ea14aeb531","clipped","transforms","$7b0c2128a27f5020$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","imgContext","$8463d325b53eeb0c$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$13dfa0283bf5c35f$export$bd05e394339d469","resultFeatures","$13dfa0283bf5c35f$export$6d4d555ddbfffa32","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","loadExtent","$6da4c8ed3074c92b$export$39a9ce3624977b84","declutterBuilderGroup","userTransform","userExtent_1","$4b9ac454600c05d2$export$75084a70d324c1e6","dirty","renderFeature","userExtent","replayGroupInstructions","$82a68515bd6ef378$export$2e2bcd8739ae039","VectorLayer","$82a68515bd6ef378$var$__extends","$659e0e97392a5f5e$exports","$c8d6dc4c09ed9916$exports","$efd3ba4ec2608b1d$var$circleFeature1","$9fd014ab6df63665$exports","$f6170f1a08d72585$exports","outerRadius","gradient","createRadialGradient","addColorStop","$efd3ba4ec2608b1d$var$circleFeature2","$efd3ba4ec2608b1d$var$circleFeature3","$41aa29ae0c4b607a$exports","$32e67a4d3559554a$exports","$6c8498cc816f2362$exports","$82a68515bd6ef378$exports","$84888e4daf3fdf44$exports"],"version":3,"file":"index.7c95b18a.js.map"}